{"version":3,"sources":["components/Fullpage.js","sections/TitlesAndIcons.js","sections/About.js","components/SkillCard.js","sections/Skill.js","components/Menu.js","sections/TotalPage.js","App.js","serviceWorker.js","index.js"],"names":["Fullpage","children","this","props","react_default","a","createElement","className","concat","lib_default","Component","TitlesAndIcons","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","color","changeColor","bind","assertThisInitialized","setState","modules","name","src_components_Fullpage","style","onMouseOver","onMouseLeave","data","title","subtitle","keys","links","map","key","react_social_icons","url","activeClass","to","spy","smooth","offset","duration","onSetActive","handleSetActive","src","alt","maxWidth","maxHeight","About","sections","items","p","content","SkillCard","skill","logo","Skill","eachskill","src_components_SkillCard","id","Menu","menu","item1","item2","themenumber","TotalPage","backgroundColor","changer","theme","backgroundcolor","length","onMouseDown","item0","src_components_Menu","src_sections_TitlesAndIcons","src_sections_About","src_sections_Skill","App","src_sections_TotalPage","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c96734ea.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\nimport './Fullpage.css';\r\nimport SnowStorm from 'react-snowstorm';\r\n\r\nclass Fullpage extends Component {\r\n\r\n    render() {\r\n        const {children} = this.props;\r\n        return (\r\n            <div\r\n                className={`fullpage ${this.props.className}`}>\r\n                <SnowStorm/>\r\n                {children}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Fullpage;","import React, {Component} from 'react';\r\nimport data from \"../data.json\"\r\nimport Fullpage from '../components/Fullpage'\r\nimport {SocialIcon} from 'react-social-icons';\r\nimport './TitlesAndIcons.css';\r\nimport {Link, Element} from 'react-scroll'\r\n\r\nclass TitlesAndIcons extends Component {\r\n\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            color: '#000000'\r\n        }\r\n        this.changeColor = this.changeColor.bind(this)\r\n    }\r\n\r\n    changeColor() {\r\n\r\n        this.setState({\r\n            color: this.state.color === ' #000000' ? ' #ffffff' : ' #000000'\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Element name=\"up\" className=\"element\">\r\n                </Element>\r\n                <Fullpage className=\"first\">\r\n                    <h1 className=\"title\"\r\n                        style={{\r\n                            color: this.state.color\r\n                        }}\r\n                        onMouseOver={this.changeColor}\r\n                        onMouseLeave={this.changeColor}>\r\n                        {data.title}\r\n                    </h1>\r\n                    <div>\r\n                        <h2>\r\n                            {data.subtitle}\r\n                        </h2>\r\n                    </div>\r\n                    <div className=\"icons-wrapper\">\r\n                        {\r\n                            Object.keys(data.links).map(key => {\r\n                                return (\r\n                                    <div className=\"icon\">\r\n                                        <SocialIcon url={data.links[key]}/>\r\n                                    </div>\r\n                                );\r\n                            })\r\n                        }\r\n                    </div>\r\n                    <p></p>\r\n                    <p></p>\r\n                    <p></p>\r\n                    <p></p>\r\n                    <Link activeClass=\"active\" to=\"about\" spy={true} smooth={true} offset={50} duration={500}\r\n                          onSetActive={this.handleSetActive}>\r\n                        <img src=\"images/down.png\" alt=\"down\" style={\r\n                            {\r\n                                maxWidth: 30,\r\n                                maxHeight: 30\r\n                            }\r\n                        }/>\r\n                    </Link>\r\n                </Fullpage>\r\n                <Element name=\"about\" className=\"element\">\r\n                </Element>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default TitlesAndIcons;","import React, {Component} from 'react';\r\nimport data from \"../data.json\"\r\nimport Fullpage from '../components/Fullpage'\r\nimport './About.css';\r\nimport {Link, Element} from 'react-scroll'\r\n\r\nclass About extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Fullpage className=\"second\">\r\n                    <h3>\r\n                        {data.sections[0].title}\r\n                    </h3>\r\n                    <div>\r\n                        {data.sections[0].items.map(p => {\r\n                                return <div>{p.content}</div>;\r\n                            }\r\n                        )}\r\n                    </div>\r\n                    <p></p>\r\n                    <p></p>\r\n                    <p></p>\r\n                    <p></p>\r\n                    <Link activeClass=\"active\" to=\"skill\" spy={true} smooth={true} offset={50} duration={500}\r\n                          onSetActive={this.handleSetActive}>\r\n                        <img src=\"images/down.png\" alt=\"down\" style={\r\n                            {\r\n                                maxWidth: 30,\r\n                                maxHeight: 30\r\n                            }\r\n                        }/>\r\n                    </Link>\r\n                </Fullpage>\r\n                <Element name=\"skill\" className=\"element\">\r\n                </Element>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default About;","import React, {Component} from 'react';\r\nimport './SkillCard.css';\r\n\r\nclass SkillCard extends Component {\r\n    render() {\r\n        const {skill} = this.props\r\n        return (\r\n            <div className=\"card\">\r\n                <div className=\"image-wrapper\">\r\n                    <img src={skill.content.logo} alt={skill.content.title}/>\r\n                </div>\r\n                <div className=\"skill-title-wrapper\">\r\n                    <h4>\r\n                        {skill.content.title}\r\n                    </h4>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SkillCard;","import React, {Component} from 'react';\r\nimport data from \"../data.json\"\r\nimport Fullpage from '../components/Fullpage'\r\nimport SkillCard from '../components/SkillCard'\r\nimport './Skill.css';\r\nimport {Link} from 'react-scroll'\r\n\r\nclass Skill extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Fullpage className=\"third\">\r\n                    <h3>\r\n                        {data.sections[1].title}\r\n                    </h3>\r\n                    <div className=\"cards-wrapper\">\r\n                        {data.sections[1].items.map(eachskill => {\r\n                                return (\r\n                                    <SkillCard skill={eachskill}/>\r\n                                )\r\n                            }\r\n                        )}\r\n                    </div>\r\n                </Fullpage>\r\n                <Link activeClass=\"active\" to=\"up\" spy={true} smooth={true} offset={50} duration={500}\r\n                      onSetActive={this.handleSetActive}>\r\n                    <img id=\"up\" src=\"images/up.png\" alt=\"up\"/>\r\n                </Link>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Skill;","import React, {Component} from 'react';\r\nimport './Menu.css';\r\nimport {Link, Element} from 'react-scroll';\r\nimport data from \"../data.json\";\r\n\r\nclass Menu extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"menu\">\r\n                <Link activeClass=\"active\" to=\"about\" spy={true} smooth={true} offset={50} duration={500}\r\n                      onSetActive={this.handleSetActive}>\r\n                    <div className=\"menuparts\">{data.menu.item1}</div>\r\n                </Link>\r\n                <Element name=\"about\" className=\"element\">\r\n                </Element>\r\n                <Link activeClass=\"active\" to=\"skill\" spy={true} smooth={true} offset={50} duration={500}\r\n                      onSetActive={this.handleSetActive}>\r\n                    <div className=\"menuparts\">{data.menu.item2}</div>\r\n                </Link>\r\n                <Element name=\"skill\" className=\"element\">\r\n                </Element>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Menu;","import React, {Component} from 'react';\r\nimport TitlesAndIcons from '../sections/TitlesAndIcons'\r\nimport About from '../sections/About'\r\nimport Skill from '../sections/Skill'\r\nimport data from \"../data.json\";\r\nimport './TotalPage.css';\r\nimport Menu from \"../components/Menu\";\r\n\r\nlet themenumber = 0;\r\n\r\nclass TotalPage extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            backgroundColor: '#d6dbdf',\r\n            color: '#212f3c'\r\n        }\r\n        this.changer = this.changer.bind(this)\r\n    }\r\n\r\n\r\n    changer() {\r\n        this.setState({\r\n            color: data.theme[themenumber].color,\r\n            backgroundColor: data.theme[themenumber].backgroundcolor\r\n        });\r\n        if (themenumber < data.theme.length - 1)\r\n            themenumber++;\r\n        else\r\n            themenumber = 0;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"navbar\">\r\n                    <div className=\"menuparts-left\"\r\n                         onMouseDown={this.changer}\r\n                    >\r\n                        {<img id=\"theme\" src={data.menu.item0} alt=\"color\"/>}</div>\r\n                    <Menu/>\r\n                </div>\r\n                <div style={{backgroundColor: this.state.backgroundColor, color: this.state.color}}>\r\n                    <TitlesAndIcons/>\r\n                    <About/>\r\n                    <Skill/>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default TotalPage;\r\n\r\n","import React from 'react';\nimport './App.css';\n\nimport TotalPage from \"./sections/TotalPage\";\n\nfunction App() {\n    return (\n        <div>\n            <TotalPage/>\n        </div>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}